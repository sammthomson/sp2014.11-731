#!/usr/bin/env python
import codecs
import optparse
import sys


def check(bitext_filename):
    with codecs.open(bitext_filename, encoding="utf-8") as bitext_file:
        for (n, (f_e, a)) in enumerate(zip(bitext_file, sys.stdin)):
            (f, e) = f_e.split(' ||| ')
            size_f = len(f.strip().split())
            size_e = len(e.strip().split())
            alignment = set([tuple(int(y) for y in x.split("-")) for x in a.strip().split()])
            for (i, j) in alignment:
                if i >= size_f or j > size_e:
                    sys.stderr.write(
                        "WARNING (%s): Sentence %d, point (%d,%d) is not a valid link\n" % (sys.argv[0], n, i, j))
                pass
            yield a
        warned = False
        for a in sys.stdin:
            if not warned:
                sys.stderr.write("WARNING (%s): alignment file is longer than bitext\n" % sys.argv[0])
                warned = True
            sys.stdout.write(a)

        try:
            a = bitext_file.next()
            if a:
                sys.stderr.write("WARNING (%s): bitext is longer than alignment\n" % sys.argv[0])
                # sys.stderr.write(a)
        except StopIteration:
            pass


if __name__ == "__main__":
    opt_parser = optparse.OptionParser()
    opt_parser.add_option("-b", "--bitext", dest="bitext", default="data/dev-test-train.de-en",
                          help="Parallel corpus (default data/dev-test-train.de-en)")
    (opts, args) = opt_parser.parse_args()

    for line in check(opts.bitext):
        sys.stdout.write(line)
